version: '3.6'
services:
  kafkateria:
    image: 421990735784.dkr.ecr.us-east-1.amazonaws.com/flipp/kafkateria
    hostname: kafkateria
    ports:
      - "8002:3000"
    environment:
      SCHEMA_REGISTRY: 'http://schema-registry:8081'
      KAFKA_SEED_BROKER: 'kafka-broker:9092'
      WAIT_FOR_FILES: 'true'
    volumes:
      - kafkateria:/var/app/external

  zookeeper:
    image: confluentinc/cp-zookeeper
    hostname: zookeeper
    expose:
      - "2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka-broker:
    image: confluentinc/cp-enterprise-kafka
    hostname: kafka-broker
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka-broker:9092'
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka-broker:9092
      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper:2181
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'

  schema-registry:
    image: confluentinc/cp-schema-registry
    hostname: schema-registry
    depends_on:
      - zookeeper
      - kafka-broker
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:2181'

  # Uncomment below to use Schema Registry UI at http://localhost:8001
  # schema-registry-ui:
  #   image: landoop/schema-registry-ui
  #   hostname: schema-registry-ui
  #   ports:
  #     - "8001:8000"
  #   environment:
  #     SCHEMAREGISTRY_URL: http://schema-registry:8081/
  #     PROXY: "true"
  #   depends_on:
  #     - schema-registry

  # Uncomment below to use Kafka REST Proxy and Kafka Topics UI at http://localhost:8000
  # NOTE: Consider using Kafkateria instead unless you need specific features from Kafka REST Proxy or Kafka Topics UI
  # kafka-rest-proxy:
  #   image: 421990735784.dkr.ecr.us-east-1.amazonaws.com/flipp/base/mockzilla-api:kafka
  #   hostname: kafka-rest-proxy
  #   ports:
  #     - "8090:8090"
  #   environment:
  #     KAFKA_REST_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_REST_LISTENERS: http://0.0.0.0:8082/
  #     KAFKA_REST_SCHEMA_REGISTRY_URL: http://schema-registry:8081/
  #     KAFKA_REST_HOST_NAME: kafka-rest-proxy
  #     KAFKA_REST_BOOTSTRAP_SERVERS: kafka-broker:9092
  #   depends_on:
  #     - zookeeper
  #     - kafka-broker
  #     - schema-registry
  #
  # kafka-topics-ui:
  #   image: landoop/kafka-topics-ui
  #   hostname: kafka-topics-ui
  #   ports:
  #     - "8000:8000"
  #   environment:
  #     KAFKA_REST_PROXY_URL: "http://kafka-rest-proxy:8082/"
  #     PROXY: "true"
  #   depends_on:
  #     - zookeeper
  #     - kafka-broker
  #     - schema-registry-ui
  #     - kafka-rest-proxy

  db:
    hostname: db
    image: circleci/mysql:5.7
    restart: always
    expose:
        - "3306"
    volumes:
        - dbdata:/var/lib/mysql

  db_migration:
    image: my_app.latest
    build: .
    environment:
      - DB_HOST=db
      - RAILS_ENV=development
    command: rake db:create db:migrate db:seed db:test:prepare
    entrypoint: []
    depends_on:
      - db

  web:
    image: my_app.latest
    build: .
    ports:
      - "3000:3000"
    restart: always
    entrypoint:
      - bundle
      - exec
    command: "bundle exec rails server -b 0.0.0.0 -p 3000"
    environment:
      - RAILS_ENV=development
      - DB_HOST=db
      - KAFKA_SCHEMA_REGISTRY=http://schema-registry:8081
      - KAFKA_SSL_BROKERS=kafka-broker:9092
      - KAFKATERIA_URL=http://kafkateria:3000
    volumes:
      - ./app:/var/app/app
      - kafkateria:/var/app/kafkateria:ro

volumes:
  dbdata:
  kafkateria:
